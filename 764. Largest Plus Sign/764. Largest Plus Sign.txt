class Solution {
    public int orderOfLargestPlusSign(int n, int[][] mines) {
        int[][] left = new int[n][n];
        int[][] right = new int[n][n];
        int[][] top = new int[n][n];
        int[][] down = new int[n][n];
        int[][] arr = new int[n][n];
        
        for(int i = 0; i < n; i++){
            Arrays.fill(arr[i], 1);
        }
        
        for(int i = 0; i < mines.length; i++){
            arr[mines[i][0]][mines[i][1]] = 0;
        }
        
        for(int i = 0; i < n; i++){
            for(int j = 0; j < n; j++){
                if(arr[i][j]!=0){
                    left[i][j] = j-1 >= 0? left[i][j-1] + 1: 1;   
                }
            }
            for(int j = n-1; j>=0; j--){
                if(arr[i][j]!=0){
                    right[i][j] = j+1 < n ? right[i][j+1] + 1: 1;   
                }
            }
        }
      
        for(int j = 0; j < n; j++){
            for(int i = 0; i < n; i++){
                if(arr[i][j]!=0){
                    top[i][j] = i-1 >= 0? top[i-1][j] + 1: 1;   
                }
            }
            for(int i = n-1; i >=0 ; i--){
                if(arr[i][j]!=0){
                    down[i][j] = i+1 < n? down[i+1][j] + 1: 1;   
                }
            }
        }
        int ans = 0, a;
        for(int i = 0; i < n; i++){
            for(int j = 0; j < n; j++){
                if(arr[i][j]!=0){
                    if(j-1 < 0 || j + 1 >= n || i + 1 >= n || i - 1 < 0){
                        ans = Math.max(ans, 1);
                    }
                    else{
                        a = Math.min(top[i-1][j], down[i+1][j]);
                        a = Math.min(a, left[i][j-1]);
                        a = Math.min(a, right[i][j+1]);
                        ans = Math.max(ans, 1 + a);
                    }
                }
            }
        }
        return ans;
    }
}
