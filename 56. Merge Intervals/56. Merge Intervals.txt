class Solution {
    public int[][] merge(int[][] intervals) {
        int n = intervals.length;
        ArrayList<answer> ans = new ArrayList<>();
        answer[] arr = new answer[n];
        for(int i = 0; i < n; i++){
            arr[i] = new answer(intervals[i][0], intervals[i][1]);
        }
        Arrays.sort(arr);
        int a = -1, l = 0, r;
        for(int i = 0; i < n; i++){
            if(arr[i].a > a){
                if(a!=-1){
                    r = a;
                    ans.add(new answer(l, r));
                }
                a = arr[i].b;
                l = arr[i].a;
            }
            else{
                a = Math.max(a, arr[i].b);
            }
        }
        r = a;
        ans.add(new answer(l,r));
        n = ans.size();
        int[][] array = new int[n][2];
        n = 0;
        for(answer i : ans){
            array[n][0] = i.a;
            array[n][1] = i.b;
            n++;
        }
      
        return array;
    }
    public class answer implements Comparable<answer>{
        int a, b;
        
        public answer(int a, int b){
            this.a = a;
            this.b = b;
        }
        
        public int compareTo(answer o){
            return this.a - o.a;
        }
    }
}
